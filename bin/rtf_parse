#!/usr/bin/env ruby
# encoding: utf-8

require 'ruby-rtf'

@prefix = ''
@suffix = ''

def add(open, close = open)
  @prefix << "<#{open}>"
  @suffix = "</#{close}>#{@suffix}"
end

doc = RubyRTF::Parser.parse(File.open(ARGV[0]).read)

STDERR.puts doc

str = '<html><body>'
doc.sections.each do |section|
  mods = section[:modifiers]

  @prefix = ''
  @suffix = ''

  if mods[:paragraph]
    if section[:text].empty?
      str << "<p></p>\n"
    else
      add('p')
    end

  elsif mods[:tab]
    str << "&nbsp;&nbsp;&nbsp;&nbsp;"
    next
  elsif mods[:newline]
    str << "<br />\n"
    next
  elsif mods[:rquote]
    str << "&rsquo;"
    next
  elsif mods[:lquote]
    str << "&lsquo;"
    next
  elsif mods[:ldblquote]
    str << "&ldquo;"
    next
  elsif mods[:rdblquote]
    str << "&rdquo;"
    next
  elsif mods[:emdash]
    str << "&mdash;"
    next
  elsif mods[:endash]
    str << "&ndash;"
    next
  end

  next if section[:text].empty?

  add('b') if mods[:bold]
  add('i') if mods[:italic]
  add('u') if mods[:underline]
  add('sup') if mods[:superscript]
  add('sub') if mods[:subscript]
  add('del') if mods[:strikethrough]

  style = ''
  style << "font-variant: small-caps;" if mods[:smallcaps]
  style << "font-size: #{mods[:font_size]}pt;" if mods[:font_size]
  style << "font-family: \"#{mods[:font].name}\";" if mods[:font]

  add("span style='#{style}'", 'span') unless style.empty?

  str << @prefix + section[:text] + @suffix
end

str << "</body></html>"
puts str